(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))l(a);new MutationObserver(a=>{for(const o of a)if(o.type==="childList")for(const m of o.addedNodes)m.tagName==="LINK"&&m.rel==="modulepreload"&&l(m)}).observe(document,{childList:!0,subtree:!0});function i(a){const o={};return a.integrity&&(o.integrity=a.integrity),a.referrerPolicy&&(o.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?o.credentials="include":a.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function l(a){if(a.ep)return;a.ep=!0;const o=i(a);fetch(a.href,o)}})();class ge{constructor(){this.init()}init(){this.hideLoading(),this.setupNavbar(),this.setupAnimations(),this.setupInteractions(),this.setupScrollAnimations(),this.initProfessionalBackground(),this.setupParallaxEffects(),this.startIstClock()}hideLoading(){setTimeout(()=>{const n=document.getElementById("loading-screen");n&&(n.style.opacity="0",setTimeout(()=>{n.style.display="none"},500))},800)}setupNavbar(){const n=document.getElementById("navbar"),i=document.querySelectorAll(".nav-link");window.addEventListener("scroll",()=>{window.scrollY>50?n.classList.add("scrolled"):n.classList.remove("scrolled"),this.updateActiveNav()});const l=document.querySelector('.nav-link[data-link="contact"]'),a=document.querySelector('.nav-link[data-link="resume"]');l&&l.addEventListener("click",o=>{o.preventDefault();const m=document.querySelector("#contact");m&&m.scrollIntoView({behavior:"smooth",block:"start"})}),a&&a.addEventListener("click",o=>{o.stopPropagation()}),i.forEach(o=>{o.addEventListener("click",()=>{i.forEach(m=>m.classList.remove("active")),o.classList.add("active")})}),this.updateActiveNav()}updateActiveNav(){const n=["home","about","expertise","projects","contact"],i=document.querySelectorAll(".nav-link"),l=window.scrollY+100;n.forEach((a,o)=>{const m=document.getElementById(a);if(m){const r=m.offsetTop,C=m.offsetHeight;l>=r&&l<r+C&&(i.forEach(f=>f.classList.remove("active")),i[o]&&i[o].classList.add("active"))}})}setupAnimations(){const n={threshold:.1,rootMargin:"0px 0px -50px 0px"},i=new IntersectionObserver(l=>{l.forEach(a=>{a.isIntersecting&&(a.target.style.opacity="1",a.target.style.transform="translateY(0)")})},n);document.querySelectorAll(".fade-in").forEach(l=>{l.style.opacity="0",l.style.transform="translateY(50px)",l.style.transition="opacity 0.8s ease, transform 0.8s ease",i.observe(l)})}setupInteractions(){document.querySelectorAll('a[href^="#"]').forEach(i=>{i.addEventListener("click",function(l){l.preventDefault();const a=document.querySelector(this.getAttribute("href"));a&&a.scrollIntoView({behavior:"smooth",block:"start"})})}),this.initArchitect(),document.querySelectorAll(".tech-item").forEach(i=>{i.addEventListener("mouseenter",function(){this.style.transform="translateY(-8px) scale(1.05)",this.style.background="rgba(0, 212, 255, 0.15)",this.style.borderColor="#00d4ff",this.style.boxShadow="0 20px 40px rgba(0, 212, 255, 0.2)"}),i.addEventListener("mouseleave",function(){this.style.transform="translateY(0) scale(1)",this.style.background="rgba(255, 255, 255, 0.1)",this.style.borderColor="rgba(255, 255, 255, 0.1)",this.style.boxShadow="none"})});const n=document.getElementById("contact-form");n&&n.addEventListener("submit",function(i){i.preventDefault();const l=this.querySelector('button[type="submit"]'),a=l.textContent;l.textContent="Message Sent!",l.style.background="linear-gradient(135deg, #00ff88, #00cc77)",l.style.color="#000",l.style.transform="scale(1.05)",setTimeout(()=>{l.textContent=a,l.style.background="",l.style.color="",l.style.transform=""},3e3)}),document.querySelectorAll(".card, .project-card").forEach(i=>{i.addEventListener("mouseenter",function(){this.style.transform="translateY(-10px) scale(1.02)",this.style.boxShadow="0 25px 50px rgba(0, 0, 0, 0.3)"}),i.addEventListener("mouseleave",function(){this.style.transform="translateY(0) scale(1)",this.style.boxShadow="none"})})}setupScrollAnimations(){const n={threshold:.1,rootMargin:"0px 0px -100px 0px"},i=new IntersectionObserver(l=>{l.forEach(a=>{a.isIntersecting&&a.target.classList.add("animate-in")})},n);document.querySelectorAll(".card, .project-card").forEach(l=>{i.observe(l)})}initProfessionalBackground(){const n=document.getElementById("hero-canvas");if(!n)return;const i=n.getContext("2d");n.width=window.innerWidth,n.height=window.innerHeight;const l=[],a=40;for(let r=0;r<a;r++)l.push({x:Math.random()*n.width,y:Math.random()*n.height,vx:(Math.random()-.5)*.3,vy:(Math.random()-.5)*.3,size:Math.random()*2+1,color:`hsl(${200+Math.random()*60}, 70%, 60%)`,opacity:Math.random()*.4+.2});const o=[{symbol:"☁️",x:n.width*.2,y:n.height*.3,size:40},{symbol:"🔷",x:n.width*.8,y:n.height*.2,size:35},{symbol:"⚓",x:n.width*.1,y:n.height*.7,size:45},{symbol:"🐳",x:n.width*.9,y:n.height*.6,size:38},{symbol:"🔒",x:n.width*.5,y:n.height*.1,size:42},{symbol:"🏗️",x:n.width*.3,y:n.height*.8,size:36}];function m(){i.clearRect(0,0,n.width,n.height),l.forEach(r=>{r.x+=r.vx,r.y+=r.vy,(r.x<0||r.x>n.width)&&(r.vx*=-1),(r.y<0||r.y>n.height)&&(r.vy*=-1),i.beginPath(),i.arc(r.x,r.y,r.size,0,Math.PI*2),i.fillStyle=r.color,i.globalAlpha=r.opacity,i.fill(),i.globalAlpha=1}),o.forEach((r,C)=>{const f=Date.now()*.001,L=C*.5;r.x+=Math.sin(f+L)*.5,r.y+=Math.cos(f+L)*.3,i.font=`${r.size}px Arial`,i.textAlign="center",i.textBaseline="middle",i.globalAlpha=.6,i.fillText(r.symbol,r.x,r.y),i.globalAlpha=1}),l.forEach((r,C)=>{l.slice(C+1).forEach(f=>{const L=r.x-f.x,q=r.y-f.y,W=Math.sqrt(L*L+q*q);W<100&&(i.beginPath(),i.moveTo(r.x,r.y),i.lineTo(f.x,f.y),i.strokeStyle=`rgba(0, 212, 255, ${.1*(1-W/100)})`,i.lineWidth=1,i.stroke())})}),requestAnimationFrame(m)}m(),window.addEventListener("resize",()=>{n.width=window.innerWidth,n.height=window.innerHeight})}setupParallaxEffects(){window.addEventListener("scroll",()=>{const n=window.pageYOffset;document.querySelectorAll(".hero, .section").forEach(l=>{const o=-(n*.3);l.style.transform=`translateY(${o}px)`})})}startIstClock(){const n=document.getElementById("ist-time");if(!n)return;const i=a=>a<10?"0"+a:""+a,l=()=>{const a=new Date,o=new Date(a.toLocaleString("en-US",{timeZone:"Asia/Kolkata"}));let m=o.getHours();const r=o.getMinutes(),C=o.getSeconds(),f=m>=12?"PM":"AM";m=m%12,m=m||12,n.textContent=`${i(m)}:${i(r)}:${i(C)} ${f}`};l(),this._istTimer=setInterval(l,1e3)}initArchitect(){const n=document.getElementById("enter-architect"),i=document.getElementById("architect-modal"),l=document.getElementById("architect-close"),a=document.getElementById("architect-canvas"),o=document.getElementById("architect-terminal"),m=document.getElementById("architect-run"),r=document.getElementById("architect-clear"),C=document.querySelectorAll(".arch-chip button"),f=document.getElementById("architect-gif"),L=document.getElementById("architect-gif-img"),q=document.getElementById("view-original"),W=document.getElementById("view-schematic"),S=document.getElementById("architect-img"),A=document.getElementById("step-plan"),N=document.getElementById("step-adr"),z=document.getElementById("step-diagram"),P=document.getElementById("step-terraform"),Y=document.getElementById("step-cicd"),G=document.getElementById("step-launch"),d=document.getElementById("architect-safari"),b=document.getElementById("safari-content"),h=document.getElementById("view-toggle"),V=document.getElementById("safari-dot-red"),ne=document.getElementById("safari-dot-yellow"),oe=document.getElementById("safari-dot-green"),Q=document.getElementById("term-dot-red"),le=document.getElementById("term-dot-yellow"),re=document.getElementById("term-dot-green");if(!i||!a||!o)return;const u=a.getContext("2d");let I="terraform";const k=()=>{i.classList.add("open"),i.setAttribute("aria-hidden","false")},O=()=>{i.classList.remove("open"),i.setAttribute("aria-hidden","true")};l?.addEventListener("click",O),i.addEventListener("click",t=>{t.target===i&&O()}),document.addEventListener("keydown",t=>{t.key==="Escape"&&O()});const j=()=>{a.width=a.clientWidth||a.offsetWidth||800,a.height=Math.max(380,a.clientHeight||a.offsetHeight||600),K()};try{new ResizeObserver(j).observe(a)}catch{window.addEventListener("resize",j)}const ce=()=>{S&&S.classList.add("show"),S&&(S.hidden=!1),a.style.display="none"},B=()=>{S&&S.classList.remove("show"),S&&(S.hidden=!0),a.style.display="block",j()};q?.addEventListener("click",ce),W?.addEventListener("click",B),n?.addEventListener("click",()=>{B(),k()}),document.getElementById("hero-play")?.addEventListener("click",()=>{I="fargate-app",B(),k(),o.innerHTML="",y(A),e("Project: Microservices on ECS Fargate — frontend, api, admin"),e("Goals: highly available, secure, observable, automated"),setTimeout(()=>$(),800)}),document.getElementById("architect-play")?.addEventListener("click",()=>{I="fargate-app",B(),k(),o.innerHTML="",y(A),e("Project: Microservices on ECS Fargate — frontend, api, admin"),e("Goals: highly available, secure, observable, automated"),setTimeout(()=>$(),800)}),C.forEach(t=>{t.addEventListener("click",()=>{I=t.getAttribute("data-stack")||"fargate-app";const s=document.querySelector(".architect-dialog"),c=document.getElementById("architect-img-right"),p=document.querySelector(".architect-terminal");I==="fargate-app"&&(s?.classList.remove("terminal-only"),B(),k(),p&&(p.style.display=""),c&&(c.hidden=!0,c.classList.remove("show")),d&&(d.hidden=!0),o.innerHTML="",y(A),e("Project: Microservices on ECS Fargate — frontend, api, admin"),e("Goals: highly available, secure, observable, automated"),setTimeout(()=>$(),900))})}),m?.addEventListener("click",()=>ae(I)),r?.addEventListener("click",()=>{o.innerHTML="",te()});const x=document.querySelector(".architect-terminal");x?.addEventListener("dblclick",()=>{document.fullscreenElement?document.exitFullscreen?.():x.requestFullscreen?.()});const E=document.querySelector(".architect-dialog"),J=document.querySelector(".mac-dots .dot.red"),X=document.querySelector(".mac-dots .dot.yellow"),ee=document.querySelector(".mac-dots .dot.green"),R=t=>s=>{(s.key==="Enter"||s.key===" ")&&(s.preventDefault(),t())};(()=>{const t=()=>{E?.classList.contains("plan-mode")?(E.classList.remove("plan-mode"),d&&(d.hidden=!0),h&&(h.style.display="flex"),b&&(b.innerHTML=""),A?.focus?.()):O()};J?.addEventListener("click",t,{once:!1}),J?.addEventListener("keydown",R(t),{once:!1}),Q?.addEventListener("click",t,{once:!1}),Q?.addEventListener("keydown",R(t),{once:!1}),V?.addEventListener("click",t,{once:!1}),V?.addEventListener("keydown",R(t),{once:!1}),X?.addEventListener("click",()=>{document.fullscreenElement&&document.exitFullscreen?.(),x?.classList.toggle("minimized")},{once:!1}),X?.addEventListener("keydown",R(()=>{document.fullscreenElement&&document.exitFullscreen?.(),x?.classList.toggle("minimized")}),{once:!1}),le?.addEventListener("click",()=>{document.fullscreenElement&&document.exitFullscreen?.(),x?.classList.toggle("minimized")},{once:!1}),re?.addEventListener("click",async()=>{document.fullscreenElement?await document.exitFullscreen?.():await x?.requestFullscreen?.(),E?.classList.toggle("half")},{once:!1}),ne?.addEventListener("click",()=>{},{once:!1}),oe?.addEventListener("click",()=>{},{once:!1}),ee?.addEventListener("click",async()=>{document.fullscreenElement?await document.exitFullscreen?.():await x?.requestFullscreen?.(),E?.classList.toggle("half")},{once:!1}),ee?.addEventListener("keydown",R(async()=>{document.fullscreenElement?await document.exitFullscreen?.():await x?.requestFullscreen?.(),E?.classList.toggle("half")}),{once:!1})})();function T(t){!f||!L||(L.src=t,f.hidden=!1)}function te(){f&&(f.hidden=!0)}function e(t){const s=document.createElement("div");s.className="term-line",s.textContent=t,o.appendChild(s),o.scrollTop=o.scrollHeight}function v(t,s=35){return new Promise(c=>{let p=0;const g=document.createElement("div");g.className="term-line",o.appendChild(g);const M=setInterval(()=>{if(p>t.length){clearInterval(M),o.scrollTop=o.scrollHeight,c();return}g.textContent=t.slice(0,p++),o.scrollTop=o.scrollHeight},s)})}function _(t=""){const s=["⠋","⠙","⠹","⠸","⠼","⠴","⠦","⠧","⠇","⠏"],c=document.createElement("div");c.className="term-line",o.appendChild(c);let p=0;const g=setInterval(()=>{c.textContent=`${t} ${s[p=++p%s.length]}`,o.scrollTop=o.scrollHeight},90);return()=>clearInterval(g)}function D(t,s,c,p,g,M){u.fillStyle=g,u.fillRect(t,s,c,p),u.fillStyle="rgba(0,0,0,0.25)",u.fillRect(t+c,s+12,4,p),u.fillRect(t+4,s+p,c,4),M&&(u.fillStyle="rgba(255,255,255,0.9)",u.font="bold 14px Inter, system-ui, sans-serif",u.fillText(M,t+10,s+24))}function F(t,s,c,p){u.strokeStyle="rgba(0, 212, 255, 0.5)",u.lineWidth=2,u.beginPath(),u.moveTo(t,s),u.lineTo(c,p),u.stroke()}function de(){u.clearRect(0,0,a.width,a.height),u.strokeStyle="rgba(255,255,255,0.05)",u.lineWidth=1;for(let t=20;t<a.width;t+=40)u.beginPath(),u.moveTo(t,0),u.lineTo(t,a.height),u.stroke();for(let t=20;t<a.height;t+=40)u.beginPath(),u.moveTo(0,t),u.lineTo(a.width,t),u.stroke()}function K(){de(),a.width,a.height,I==="fargate-app"&&(D(40,40,240,90,"rgba(0,212,255,0.2)","ALB + WAF"),D(320,40,260,90,"rgba(0,255,136,0.2)","ECS Cluster (Fargate)"),D(60,170,220,90,"rgba(139,92,246,0.2)","Service: frontend"),D(300,170,220,90,"rgba(139,92,246,0.2)","Service: api"),D(540,170,220,90,"rgba(139,92,246,0.2)","Service: admin"),D(200,300,240,100,"rgba(255,193,7,0.2)","RDS Postgres"),F(160,85,320,85),F(320,85,170,215),F(320,85,410,215),F(320,85,650,215),F(410,260,320,300))}async function ae(t){if(o.innerHTML="",te(),t==="terraform"){await v("suman@macbook-pro % terraform --version"),e("Terraform v1.6.6"),e("on darwin_amd64"),await v("suman@macbook-pro % terraform init");const s=_("[init]");T("aws.gif"),await w(1400),s(),e("Initializing the backend..."),e("Initializing provider plugins..."),e("- Finding latest version of hashicorp/aws..."),e("- Installing hashicorp/aws v5.50.0..."),await v("suman@macbook-pro % terraform apply -var-file=production.tfvars -auto-approve");const c=_("[apply]");T("terraform-init.webp"),await w(2200),c(),e("Plan: 31 to add, 0 to change, 0 to destroy."),e("aws_vpc.main: Creation complete"),e("aws_subnet.public[0]: Creation complete"),e("aws_subnet.public[1]: Creation complete"),e("aws_subnet.private[0]: Creation complete"),e("aws_subnet.private[1]: Creation complete"),e("aws_internet_gateway.this: Creation complete"),e("aws_nat_gateway.this: Creation complete"),e("aws_route_table.public: Creation complete"),e("aws_route_table.private: Creation complete"),e("aws_db_subnet_group.rds: Creation complete"),e("aws_db_instance.app: Creation complete"),e("aws_eks_cluster.this: Creation complete"),e("aws_eks_node_group.ec2: Creation complete"),e("aws_lb.alb: Creation complete"),e("aws_lb_listener.http: Creation complete"),e("aws_lb_listener.https: Creation complete"),e("aws_route53_record.app: Creation complete"),e("Apply complete! Resources: 31 added, 0 changed, 0 destroyed.")}else if(t==="containers"){await v("suman@macbook-pro % docker build -t app:latest .");const s=_("[build]");T("aws.gif"),await w(1500),s(),e("Successfully built app:latest"),await v("suman@macbook-pro % docker push registry/app:latest"),e("pushed: registry/app:latest")}else if(t==="ecs-k8s"){await v("suman@macbook-pro % kubectl apply -f deployment.yaml");const s=_("[kubectl]");T("aws.gif"),await w(1600),s(),e("deployment.apps/web created"),e("service/web LoadBalancer provisioning..."),e("status: Healthy, replicas: 3")}else if(t==="cicd"){await v("suman@macbook-pro % gh workflow run deploy.yml");const s=_("[gh]");T("aws.gif"),await w(1400),s(),e("CI passed ✔"),e("CD rollout: complete")}else if(t==="multitier"){await v("suman@macbook-pro % terraform apply -var-file=production.tfvars -auto-approve");const s=_("[apply]");T("terraform-init.webp"),await w(2300),s(),e("Plan: 23 to add, 0 to change, 0 to destroy."),e("module.network.aws_vpc.this: Creating..."),e("module.network.aws_subnet.public[0]: Creating..."),e("module.edge.aws_cloudfront_distribution.this: Creating..."),e("module.waf.aws_wafv2_web_acl.this: Creating..."),e("module.waf.aws_wafv2_web_acl.this: Creation complete"),e("module.alb.aws_lb.this: Creation complete"),e("module.alb.aws_lb_listener.http: Creation complete"),e("module.alb.aws_lb_listener.https: Creation complete"),e("module.app.aws_ecs_cluster.this: Creation complete"),e("module.app.aws_ecs_service.api: Creation complete"),e(`
Apply complete! Resources: 23 added, 0 changed, 0 destroyed.`),e(`
Outputs:`),e("alb_dns_name = alb-prod-123456.ap-south-1.elb.amazonaws.com"),e("cloudfront_domain = d3example1234.cloudfront.net"),e("waf_web_acl_arn = arn:aws:wafv2:ap-south-1:123456789012:regional/webacl/prod-waf/abcd1234")}else if(t==="fargate-app"){y(P),await v("suman@macbook-pro % terraform apply -var-file=production.tfvars -auto-approve");const s=_("[apply]");T("terraform-init.webp"),await w(2200),s(),e("Plan: 41 to add, 0 to change, 0 to destroy."),e("aws_vpc.main: Creation complete"),e("aws_subnet.public[*]: Creation complete"),e("aws_subnet.private[*]: Creation complete"),e("aws_internet_gateway.this: Creation complete"),e("aws_nat_gateway.this: Creation complete"),e("aws_lb.alb: Creation complete"),e("aws_wafv2_web_acl.this: Creation complete"),e("aws_ecs_cluster.this: Creation complete"),e("aws_ecs_service.frontend: Creation complete"),e("aws_ecs_service.api: Creation complete"),e("aws_ecs_service.admin: Creation complete"),e("aws_db_instance.postgres: Creation complete"),e("aws_route53_record.app: Creation complete"),e("Apply complete! Resources: 41 added, 0 changed, 0 destroyed."),setTimeout(()=>ie(),600)}}function w(t){return new Promise(s=>setTimeout(s,t))}function y(t){[A,N,z,P,Y,G].forEach(s=>s&&s.classList.remove("active")),t&&t.classList.add("active")}function $(){y(N),e("ADR-001: Why ECS Fargate over EC2/K8s?"),e("- Serverless ops, per-task isolation, simpler scaling."),e("ADR-002: API behind ALB with WAF; RDS in private; S3 for assets/logs."),setTimeout(()=>pe(),900)}function pe(){y(z),I="fargate-app",B(),K(),setTimeout(()=>ae("fargate-app"),800)}function ie(){y(Y);const t=document.querySelector(".architect-dialog"),s=document.querySelector(".architect-terminal"),c=document.querySelector(".architect-canvas-wrap"),p=document.getElementById("architect-img-right");if(t?.classList.remove("terminal-only"),s&&(s.style.display="none"),c&&(c.style.display="none"),p&&(p.style.display="none"),d&&b){d.hidden=!1,d.classList.add("show"),d.classList.add("light"),h&&(h.style.display="none"),t?.classList.add("plan-mode"),k(),b.scrollTop=0,b.innerHTML=`
                    <div style="padding:12px 16px 8px 16px;">
                        <div style="font-weight:700;font-size:14px;margin-bottom:8px;">Staging deployment — <span style="color:#0a7f2e;">succeeded</span> in 7m 30s</div>
                        <div style="font-size:12px;color:#555;margin-bottom:10px;">Search logs • Current runner version: 2.327.1</div>
                        <pre id="gh-actions-log" style="background:#0b0f13;color:#c7ffb0;padding:14px;border-radius:8px;line-height:1.4;max-height:60vh;overflow:auto;font-size:12px;font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;"></pre>
                    </div>
                `;const g=document.querySelector(".safari-url");g&&(g.textContent="https://github.com/actions/runs/deploy-to-ecs");const M=()=>document.getElementById("gh-actions-log"),Z=async(ue,be=40)=>{for(const fe of ue){const H=M();if(!H)return;H.textContent+=(H.textContent?`
`:"")+fe,H.parentElement.scrollTop=H.parentElement.scrollHeight,await w(be)}};(async()=>(await Z(["Set up job","Checkout","Configure AWS credentials","Login to Amazon ECR","Build, tag, and push image to Amazon ECR","Download task definition","Fill in the new image ID in the Amazon ECS task definition","Deploy Amazon ECS task definition","Post job cleanup","","Runner Image Provisioner","Operating System","Runner Image","GITHUB_TOKEN Permissions","Secret source: Actions","Prepare workflow directory","Prepare all required actions","Getting action download info","Download immutable action package 'actions/checkout@v3'","Download action repository 'aws-actions/configure-aws-credentials@v1' (SHA:67fbcbb121271f7775d2e7715933280b06314838)","Download action repository 'aws-actions/amazon-ecr-login@v1' (SHA:2fc7aceee09e9e4a7105c0d060c656fad0b4f63d)","Download action repository 'aws-actions/amazon-ecs-render-task-definition@v1' (SHA:64aefa8f68c9083d24d230e3099d046d5964bcba)","Download action repository 'aws-actions/amazon-ecs-deploy-task-definition@v2' (SHA:4b08990e8909cf36bc2ca95f994312f090c41865)","","Run actions/checkout@v3","Syncing repository: Selectcarleasing-co-uk/self-serve-frontend","Temporarily overriding HOME='/home/runner/work/_temp/...'","Adding repository directory to the temporary git global config as a safe directory","Deleting the contents of '/home/runner/work/self-serve-frontend/self-serve-frontend'","Initializing the repository","Disabling automatic garbage collection","Setting up auth","Fetching the repository","Determining the checkout info","Checking out the ref","/usr/bin/git log -1 --format='%H'","'1460d171690f339e3f29e08d42c9a30fa3cb44a1'","","Run aws-actions/configure-aws-credentials@v1","Warning: The set-output command is deprecated...","","Run aws-actions/amazon-ecr-login@v1","Warning: Your docker password is not masked...","Logging into registry ***.dkr.ecr.eu-west-2.amazonaws.com","","# Build a docker container and","#1 [internal] load build definition from Dockerfile.stage","#2 [internal] load metadata for docker.io/library/node:18.20.4","#3 [auth] library/node:pull token for registry-1.docker.io","#4 [internal] load .dockerignore","#5 [1/6] FROM docker.io/library/node:18.20.4@sha256:..."],28),await Z(["","npm ci --omit=dev --no-audit --progress=false","added 94 packages in 12s","New major version of npm available! 10.7.0 -> 11.5.2","","> next build","Creating an optimized production build ...","✓ Compiled successfully in 11.0s","Skipping linting","Checking validity of types ...","Installing devDependencies (typescript, @types/react, @types/node)","added 736 packages in 16s","2 vulnerabilities (1 low, 1 critical)","Generating static pages (12/12)","Finalizing page optimization ...","","exporting to image","writing image sha256:7b78ba4b98a99daa3d70bf0c4cdec8f9a58c2ebdf7768a58c518806c484577b1","naming to ***.dkr.ecr.eu-west-2.amazonaws.com/staging-selectcar-frontend:latest","","The push refers to repository [***.dkr.ecr.eu-west-2.amazonaws.com/staging-selectcar-frontend]","Pushed layers: 66d6d52ab16c, 69685635d9ce, 035fc1a73aa7, ...","latest: digest: sha256:2b23211a94e6bd9dfbab2cc7f5a8eda1a70bd62848ceb883d83445d6cdee41d8 size: 3057","","Run aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION --query taskDefinition > task-definition.json","Run aws-actions/amazon-ecs-render-task-definition@v1","Run aws-actions/amazon-ecs-deploy-task-definition@v2","Deployment started. Watch this deployment in the Amazon ECS console: https://eu-west-2.console.aws.amazon.com/ecs/v2/...","","Post job cleanup.","Logging out of registry ***.dkr.ecr.eu-west-2.amazonaws.com","Cleaning up orphan processes","","✅ Staging deployment succeeded"],32),setTimeout(()=>{s&&(s.style.display=""),c&&(c.style.display=""),p&&(p.style.display=""),se()},800)))()}}function se(){y(G);const t=document.querySelector(".architect-dialog"),s=document.querySelector(".architect-terminal"),c=document.querySelector(".architect-canvas-wrap"),p=document.getElementById("architect-img-right");if(t?.classList.remove("terminal-only"),s&&(s.style.display="none"),c&&(c.style.display="none"),p&&(p.style.display="none"),d&&b){d.hidden=!1,d.classList.add("show"),d.classList.add("light"),h&&(h.style.display="none"),t?.classList.add("plan-mode"),k();const g=document.querySelector(".safari-url");g&&(g.textContent="https://suman-electron.github.io"),b.scrollTop=0,b.innerHTML=`
                    <div style="display:grid;place-items:center;height:100%;padding:16px;">
                        <div style="width:min(900px,95%);aspect-ratio:16/10;background:#0b0f13;border-radius:14px;box-shadow:0 30px 60px rgba(0,0,0,.35), inset 0 0 0 10px #111;position:relative;overflow:hidden;border:1px solid rgba(0,0,0,.08);">
                            <div style="position:absolute;top:0;left:0;right:0;height:28px;background:#0f1620;border-bottom:1px solid rgba(255,255,255,.06);"></div>
                            <div style="position:absolute;inset:28px 0 0 0;display:grid;place-items:center;background:linear-gradient(135deg,#0f172a,#0b1220);">
                                <div style="text-align:center;">
                                    <div style="font-size:14px;color:#93c5fd;margin-bottom:8px;letter-spacing:.4px;">suman-electron.github.io</div>
                                    <div style="font-family:ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;font-size:26px;color:#22c55e;font-weight:800;">Hello FROM AWS ECS</div>
                                </div>
                            </div>
                            <div style="position:absolute;bottom:-6px;left:50%;transform:translateX(-50%);width:160px;height:10px;border-radius:0 0 12px 12px;background:#e5e7eb;"></div>
                        </div>
                    </div>
                `}}Y?.addEventListener("click",()=>ie()),G?.addEventListener("click",()=>se()),A?.addEventListener("click",()=>{if(y(A),d&&b){d.hidden=!1,d.classList.add("show"),d.classList.add("light"),h&&(h.style.display="flex"),E?.classList.add("plan-mode"),k(),b.scrollTop=0,b.innerHTML=`
                    <div class="plan">
                        <div class="plan-hero">
                            <div class="plan-hero-title"><strong>PLAN — Architecture Kickoff 🗂️</strong></div>
                            <div class="plan-hero-sub"><em>From goals to launch-ready infrastructure — crisp, secure, and scalable.</em></div>
                        </div>
                        <div class="plan-toggle">
                            <button id="plan-view-kick" class="active">Kickoff</button>
                            <button id="plan-view-grid">Detailed</button>
                        </div>
                        <div id="plan-body">
                            <ul class="kick-list">
                                <li class="kick-item">🟡 <b>Goals</b> → What we’re building & why</li>
                                <li class="kick-item">🔵 <b>Region</b> → us-east-1 for global reach</li>
                                <li class="kick-item">🟢 <b>Domain</b> → Link DNS to suman-electron.github.io</li>
                                <li class="kick-item">🟣 <b>Flow</b> → Browser → CloudFront → S3</li>
                                <li class="kick-item">🟠 <b>Security</b> → HTTPS (ACM), strict IAM</li>
                                <li class="kick-item">🔴 <b>Speed</b> → Cache + Gzip/Brotli</li>
                                <li class="kick-item">🟤 <b>Cost</b> → Small, predictable AWS bill</li>
                                <li class="kick-item">🟢 <b>Backup</b> → Keep static files safe</li>
                                <li class="kick-item">🔵 <b>Automation</b> → GitHub Actions deploy</li>
                                <li class="kick-item">🟣 <b>Sign-off</b> → Green light before launch</li>
                            </ul>
                        </div>
                    </div>
                `;const t=document.getElementById("plan-body"),s=document.getElementById("plan-view-kick"),c=document.getElementById("plan-view-grid"),p=g=>{s?.classList.toggle("active",g),c?.classList.toggle("active",!g)};s?.addEventListener("click",()=>{p(!0),t.innerHTML=`
                        <ul class="kick-list">
                            <li class="kick-item">🟡 <b>Goals</b> → What we’re building & why</li>
                            <li class="kick-item">🔵 <b>Region</b> → us-east-1 for global reach</li>
                            <li class="kick-item">🟢 <b>Domain</b> → Link DNS to suman-electron.github.io</li>
                            <li class="kick-item">🟣 <b>Flow</b> → Browser → CloudFront → S3</li>
                            <li class="kick-item">🟠 <b>Security</b> → HTTPS (ACM), strict IAM</li>
                            <li class="kick-item">🔴 <b>Speed</b> → Cache + Gzip/Brotli</li>
                            <li class="kick-item">🟤 <b>Cost</b> → Small, predictable AWS bill</li>
                            <li class="kick-item">🟢 <b>Backup</b> → Keep static files safe</li>
                            <li class="kick-item">🔵 <b>Automation</b> → GitHub Actions deploy</li>
                            <li class="kick-item">🟣 <b>Sign-off</b> → Green light before launch</li>
                        </ul>`}),c?.addEventListener("click",()=>{p(!1),t.innerHTML=`
                        <div class="plan-grid">
                            <div class="plan-section">
                                <h4>Objectives</h4>
                                <p><b>Define goals & requirements</b></p>
                                <p>Traffic, SLOs, feature scope, personas.</p>
                                <div class="pills"><span class="pill">SLOs</span><span class="pill">Capacity</span><span class="pill">Personas</span></div>
                            </div>
                            <div class="plan-section">
                                <h4>Services</h4>
                                <p><b>AWS building blocks</b></p>
                                <p>S3, CloudFront, Route 53, ACM.</p>
                                <div class="pills"><span class="pill">S3</span><span class="pill">CloudFront</span><span class="pill">ACM</span></div>
                            </div>
                            <div class="plan-section">
                                <h4>Region & DNS</h4>
                                <p><b>us-east-1</b> for global CDN & public certs.</p>
                                <p>Domain: <b>suman-electron.github.io</b>, Route 53 or external.</p>
                                <div class="pills"><span class="pill">us-east-1</span><span class="pill">Route 53</span></div>
                            </div>
                            <div class="plan-section">
                                <h4>Diagram</h4>
                                <p>Client → <b>CloudFront</b> → <b>S3</b> → Origin.</p>
                                <div class="pills"><span class="pill">Zero-Downtime</span><span class="pill">Edge Cache</span></div>
                            </div>
                            <div class="plan-section">
                                <h4>Security</h4>
                                <p><b>HTTPS</b> via ACM, least-privilege <b>IAM</b>.</p>
                                <div class="pills"><span class="pill">TLS 1.2+</span><span class="pill">IAM</span></div>
                            </div>
                            <div class="plan-section">
                                <h4>Performance</h4>
                                <p>CloudFront caching, <b>Brotli</b>/<b>Gzip</b>.</p>
                                <div class="pills"><span class="pill">Caching</span><span class="pill">Compression</span></div>
                            </div>
                            <div class="plan-section">
                                <h4>Cost</h4>
                                <p>Forecast usage & optimize tiers.</p>
                                <div class="pills"><span class="pill">Cost Control</span><span class="pill">Budgets</span></div>
                            </div>
                            <div class="plan-section">
                                <h4>DR</h4>
                                <p>Backups for static content; rollback plan.</p>
                                <div class="pills"><span class="pill">Backups</span><span class="pill">Rollback</span></div>
                            </div>
                            <div class="plan-section">
                                <h4>CI/CD</h4>
                                <p>GitHub Actions automation; triggers on commit/release.</p>
                                <div class="pills"><span class="pill">Actions</span><span class="pill">Release</span></div>
                            </div>
                            <div class="plan-section">
                                <h4>Sign-off</h4>
                                <p>Stakeholder review before provisioning.</p>
                                <div class="pills"><span class="pill">Approval</span><span class="pill">Gate</span></div>
                            </div>
                        </div>`})}}),[z,P,G].forEach(t=>t?.addEventListener("click",()=>{h&&(h.style.display="flex"),d&&d.classList.remove("light"),E?.classList.remove("plan-mode")})),N?.addEventListener("click",()=>{y(N),d&&b&&(d.hidden=!1,d.classList.add("show"),d.classList.add("light"),h&&(h.style.display="none"),E?.classList.add("plan-mode"),k(),b.scrollTop=0,b.innerHTML=`
                    <div class="plan">
                        <div class="plan-hero">
                            <div class="plan-hero-title"><strong>ADR — Architecture Decision Records 📄</strong></div>
                            <div class="plan-hero-sub"><em>Key decisions captured for clarity, speed, and alignment.</em></div>
                        </div>
                        <ul class="kick-list">
                            <li class="kick-item">🟡 <b>ECS Fargate vs EKS vs EC2</b><br><small><b>Decision</b> → ECS Fargate. <b>Reason</b> → Serverless container orchestration with minimal ops overhead. EKS = more flexibility but higher complexity; EC2 = manual scaling/patching. Fargate enables rapid deployment & fine-grained scaling.</small></li>
                            <li class="kick-item">🔵 <b>Multi-AZ VPC Design Choice</b><br><small><b>Decision</b> → Multi-AZ VPC (public + private subnets). <b>Reason</b> → High availability & fault tolerance. Public for ALB/CloudFront, private for ECS/RDS, NAT Gateways for outbound.</small></li>
                            <li class="kick-item">🟢 <b>ALB vs API Gateway for Microservices</b><br><small><b>Decision</b> → ALB. <b>Reason</b> → Lower latency, path-based routing, native ECS integration. API Gateway = better for event-driven/serverless APIs but higher cost for high-throughput traffic.</small></li>
                            <li class="kick-item">🟣 <b>RDS Postgres with Multi-AZ for Persistence</b><br><small><b>Decision</b> → Amazon RDS PostgreSQL (Multi-AZ standby). <b>Reason</b> → Automated failover, backups, scaling, strong SQL compliance, broad community support.</small></li>
                            <li class="kick-item">🟠 <b>WAF & CloudWatch Integration</b><br><small><b>Decision</b> → AWS WAF + CloudWatch alarms/dashboards. <b>Reason</b> → Protects from OWASP Top 10, bad bots; plus real-time operational insights.</small></li>
                            <li class="kick-item">🔴 <b>S3 for Static Hosting of Frontend</b><br><small><b>Decision</b> → Amazon S3 + CloudFront CDN. <b>Reason</b> → Highly available, low-cost, globally distributed hosting with HTTPS, caching, & DDoS mitigation.</small></li>
                            <li class="kick-item">🟤 <b>GitHub Actions vs AWS CodePipeline</b><br><small><b>Decision</b> → GitHub Actions. <b>Reason</b> → Unified with repo, flexible YAML pipelines, fast builds, broader ecosystem. CodePipeline = AWS-native but less developer-friendly.</small></li>
                        </ul>
                    </div>
                `)}),z?.addEventListener("click",()=>{y(z),d&&b&&(d.hidden=!1,d.classList.add("show"),d.classList.add("light"),h&&(h.style.display="none"),E?.classList.add("plan-mode"),k(),b.scrollTop=0,b.innerHTML=`
                    <div class="safari-diagram"><img src="diagram.png" alt="System architecture diagram" /></div>
                `)}),P?.addEventListener("click",async()=>{y(P);const t=document.querySelector(".architect-dialog"),s=document.querySelector(".architect-terminal");t?.classList.remove("plan-mode"),t?.classList.add("terminal-only"),d&&(d.hidden=!0),s&&(s.style.display=""),k(),o.innerHTML="",await me()});async function me(){const t=async c=>{for(const p of c)e(p),await w(35)};await v("$ terraform init",45);let s=_("[init]");await w(1200),s(),await t(["","Initializing the backend...","","Initializing provider plugins...",'- Finding hashicorp/aws versions matching "~> 5.0"...',"- Installing hashicorp/aws v5.13.0...","- Installed hashicorp/aws v5.13.0 (signed by HashiCorp)","","Terraform has been successfully initialized!","",'You may now begin working with Terraform. Try running "terraform plan" to see',"any changes that are required for your infrastructure.","All Terraform commands should now work.",""]),s=_("[plan]"),await w(1200),s(),await v("$ terraform apply -auto-approve",45),await t(["","Terraform will perform the following actions:","","  # aws_vpc.main will be created",'  + resource "aws_vpc" "main" {','      + cidr_block           = "10.0.0.0/16"',"      + enable_dns_support   = true","      + enable_dns_hostnames = true","      + tags                 = {",'          + "Name" = "main-vpc"',"        }","    }","","  # aws_subnet.public_a will be created",'  + resource "aws_subnet" "public_a" {','      + availability_zone = "us-east-1a"','      + cidr_block        = "10.0.1.0/24"',"      + map_public_ip_on_launch = true","      + tags              = {",'          + "Name" = "public-subnet-a"',"        }","    }","","  # aws_subnet.public_b will be created",'  + resource "aws_subnet" "public_b" {','      + availability_zone = "us-east-1b"','      + cidr_block        = "10.0.2.0/24"',"      + map_public_ip_on_launch = true","      + tags              = {",'          + "Name" = "public-subnet-b"',"        }","    }","","  # aws_subnet.private_a will be created",'  + resource "aws_subnet" "private_a" {','      + availability_zone = "us-east-1a"','      + cidr_block        = "10.0.3.0/24"',"      + tags              = {",'          + "Name" = "private-subnet-a"',"        }","    }","","  # aws_subnet.private_b will be created",'  + resource "aws_subnet" "private_b" {','      + availability_zone = "us-east-1b"','      + cidr_block        = "10.0.4.0/24"',"      + tags              = {",'          + "Name" = "private-subnet-b"',"        }","    }","","  # aws_internet_gateway.main will be created",'  + resource "aws_internet_gateway" "main" {',"      + tags = {",'          + "Name" = "main-igw"',"        }","    }","","  # aws_nat_gateway.main will be created",'  + resource "aws_nat_gateway" "main" {',"      + allocation_id = (known after apply)","      + subnet_id     = aws_subnet.public_a.id","      + tags          = {",'          + "Name" = "main-nat"',"        }","    }","","  # aws_lb.alb will be created",'  + resource "aws_lb" "alb" {','      + name               = "main-alb"','      + load_balancer_type = "application"',"      + subnets            = [","          aws_subnet.public_a.id,","          aws_subnet.public_b.id","        ]","    }","","  # aws_waf_web_acl.main will be created",'  + resource "aws_waf_web_acl" "main" {','      + name        = "main-waf"','      + metric_name = "MainWAF"',"    }","","  # aws_db_instance.postgres will be created",'  + resource "aws_db_instance" "postgres" {','      + engine               = "postgres"','      + engine_version       = "15.3"','      + instance_class       = "db.t3.micro"',"      + multi_az             = true","      + allocated_storage    = 20",'      + username             = "admin"',"      + publicly_accessible  = false","    }","","  # aws_s3_bucket.frontend will be created",'  + resource "aws_s3_bucket" "frontend" {','      + bucket = "portfolio-frontend-bucket"',"    }","","  # aws_cloudfront_distribution.main will be created",'  + resource "aws_cloudfront_distribution" "main" {',"      + enabled             = true",'      + default_root_object = "index.html"',"    }","","Plan: 12 to add, 0 to change, 0 to destroy.",""]),s=_("[apply]"),await w(1e3),s(),await t(["aws_vpc.main: Creating...","aws_vpc.main: Creation complete after 2s [id=vpc-0ab123456789cdef0]","","aws_subnet.public_a: Creating...","aws_subnet.public_b: Creating...","aws_subnet.private_a: Creating...","aws_subnet.private_b: Creating...","aws_subnet.public_a: Creation complete after 1s [id=subnet-0a1b2c3d4e5f67890]","aws_subnet.public_b: Creation complete after 1s [id=subnet-0b1c2d3e4f5g67891]","aws_subnet.private_a: Creation complete after 1s [id=subnet-0c1d2e3f4g5h67892]","aws_subnet.private_b: Creation complete after 1s [id=subnet-0d1e2f3g4h5i67893]","","aws_internet_gateway.main: Creating...","aws_internet_gateway.main: Creation complete after 1s [id=igw-0e1f2g3h4i5j67894]","","aws_nat_gateway.main: Creating...","aws_nat_gateway.main: Creation complete after 3s [id=nat-0f1g2h3i4j5k67895]","","aws_lb.alb: Creating...","aws_lb.alb: Creation complete after 4s [id=arn:aws:elasticloadbalancing:us-east-1:123456789012:loadbalancer/app/main-alb/abc123]","","aws_waf_web_acl.main: Creating...","aws_waf_web_acl.main: Creation complete after 2s [id=waf-1234abcd]","","aws_db_instance.postgres: Creating...","aws_db_instance.postgres: Creation complete after 15s [id=db-ABCDEFGHIJKL]","","aws_s3_bucket.frontend: Creating...","aws_s3_bucket.frontend: Creation complete after 1s [id=portfolio-frontend-bucket]","","aws_cloudfront_distribution.main: Creating...","aws_cloudfront_distribution.main: Creation complete after 8s [id=E1234567890ABC]","","Apply complete! Resources: 12 added, 0 changed, 0 destroyed.",""])}K()}}document.addEventListener("DOMContentLoaded",()=>{new ge});window.addEventListener("load",()=>{["https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap"].forEach(n=>{const i=document.createElement("link");i.rel="preload",i.as="style",i.href=n,document.head.appendChild(i)})});
